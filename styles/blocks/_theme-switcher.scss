@use "../helpers/index" as *;

.theme-switcher {  
  user-select: none;

  @media (prefers-color-scheme: light) {
    --inputIconFilter: invert(1);

    .theme-switcher__radio:hover,
    .theme-switcher__radio-input:focus-visible + .theme-switcher__radio-text {
      --inputTextFilter: invert(0.35);
    }
  }

  @media (prefers-color-scheme: dark) {
    --inputIconFilter: invert(0);

    .theme-switcher__radio:hover,
    .theme-switcher__radio-input:focus-visible + .theme-switcher__radio-text {
      --inputTextFilter: invert(0.2);
    }
  }

  &.is-light {
    --inputIconFilter: invert(1);

    .theme-switcher__radio:hover,
    .theme-switcher__radio-input:focus-visible + .theme-switcher__radio-text {
      --inputTextFilter: invert(0.35);
    }
  }

  &.is-dark {
    --inputIconFilter: invert(0);

    .theme-switcher__radio:hover,
    .theme-switcher__radio-input:focus-visible + .theme-switcher__radio-text {
      --inputTextFilter: invert(0.2);
    }
  }

  .theme-switcher__radio:has(.theme-switcher__radio-input:checked) {
    --inputTextFilter: invert(0);
    pointer-events: none;
  }

  &__legend {
    transition-duration: var(--transition-duration);
  }

  &__radios {
    display: flex;
    justify-content: space-between;
    margin-top: calc(var(--container-padding-y) / 2);
  }

  &__radio {
    display: flex;
    align-items: center;
    min-height: rem(32);

    transition-property: filter;
    transition-duration: var(--transition-duration);

    &-text {
      margin-left: var(--inputTextMarginLeft);

      filter: var(--inputTextFilter);

      transition-duration: var(--transition-duration);
    }

    &-input {
      --themeSwitcherRadioIconOffset: calc(var(--border-width) * -1);

      position: relative;

      @include square(var(--inputSize));

      border: var(--border);
      border-radius: 50%;

      appearance: none;

      transition-property: background-color, border-color;
      transition-duration: var(--transition-duration);

      &::after {
        position: absolute;
        top: calc(var(--themeSwitcherRadioIconOffset));
        left: calc(var(--themeSwitcherRadioIconOffset));
  
        @include square(var(--inputSize));
  
        content: "";
  
        background: center / 100% no-repeat;
        filter: var(--inputIconFilter);
        opacity: 0;
  
        transition-duration: var(--transition-duration);
      }

      &:focus-visible {
        outline: var(--outline);
      }

      &:checked {
        border-color: transparent;
      }

      &:checked::after {
        opacity: 1;
      }

      &--light::after {
        background-image: url("../../icons/tabs/light.svg");
      }

      &--dark::after {        
        background-image: url("../../icons/tabs/dark.svg");
        background-size: 110%;
      }

      &--system::after {
        background-image: url("../../icons/tabs/system.svg");
      }
    }
  }
} 